[workloadAnalysis]
name = jgiCompute
axes = HostGroup,User,Project,HostCode,UserCode,ProjectCode,HostExecType,HostCommandDetail,HostCodeDetail,ProjectCommandDetail,ProjectCodeDetail
axis0=generalization_hostname,generalization_command
axis1=user,generalization_command
axis2=project,generalization_command
axis3=generalization_hostname,generalization_code
axis4=user,generalization_code
axis5=project,generalization_code
axis6=generalization_hostname,generalization_execCommand
axis7=generalization_hostname,generalization_commandDetail
axis8=generalization_hostname,generalization_codeDetail
axis9=project,generalization_commandDetail
axis10=project,generalization_codeDetail

[commandRemap]
('command',r'(.*) \(deleted\)') = r'\1'
('command','^rep\d+\.batch_\d+.*$') = 'rep_<dig>.batch_<dig>'
('command',r'iprscan-\d+-\d+-(.*?)-cnk\d+\.(.*)') = r'iprscan-<date>-<id>-\1-<chunk>.\2'
('command',r'iprscan-\d+-\d+\.(.*)') = r'iprscan-<date>-<id>.\1'
('command',r'SMcli\..*') = r'SMcli.<pid>'
('command',r'(.*)') = r'\1'
('script',r'\/opt\/uge\/genepool\/uge\/genepool\/spool\/qmaster\/execd\/.*?\/job_scripts\/\d+') = 'BATCH_SCRIPT'
('command',r'hudson\d+\.sh') = r'hudson<unique>.sh'
('command',r'task.\d+.csh') = r'task.<number>.csh'
(r'cmdArgs',r'.*java.*-Dhadoop.home.dir.*') = 'hadoop'
(r'cmdArgs',r'.*java.*mapred.*hadoop.*') = 'hadoop'
(r'cmdArgs',r'.*java.*MEGAN.*') = 'MEGAN'
('command', r'sgeJob\d+.sh') = 'sgeJob<task>.sh'
('command', r'trios.batch_\d+') = 'trios.batch_<id>'
('command', r'run_call_multibam\d+.\d+') = 'run_call_multibam<id>'
('command', r'rep[\d-]+.batch_\d+') = 'rep<id>.batch_<id>'
('command', r'(.*).batch_\d+') = r'\1.batch_<id>'
('command', r'run_(.*)_\d+\.\d+') = r'run_\1_<id>.<task>'
('command', r'job_set\.\d+\.sh') = 'job_set.<id>.sh'
('command', r'rehead\d+.sh') = 'rehead<id>.sh'
('command', r'single_k(\d+)_cutoff[\d.]+_\d+.sh') = r'single_k\1_cutoff<cutoff>_<task>.sh'
('command', r'(.)\d+_sorted(.*).sh') = r'\1<id>_sorted\2.sh'
('command', r'.exec\d+') = r'.exec<unique>'
('cmdArgs', r'.*mono.*ConsensusTools/PacBio.CCS.exe.*') = 'PacBioMONO'

[generalization]
name = hostname
column = hostname
other_category = True
ignore_category = True
compute = sgi.*,mc.*,uv10.*,x4170.*,gpconvey.*,mndlhm.*,gptb.*,gpht.*,b2r2.*
login   = genepool.*,mndlint.*
gpint   = gpint\d+,msvu.*
gpweb   = gpweb.*
gpdb    = gpdb.*
ignore  = crank

[generalization]
name = execCommand
column = execCommand
other_category = False
perl    = perl.*
python  = python.*
java    = java
ruby    = ruby.*
bash    = bash
tcsh    = tcsh
sh      = sh
R       = 

[generalization]
name = command
column = command
other_category = True
ignore_category = True
csvFileTranspose = commandCategories.jgi.csv

[generalization]
name = commandDetail
column = command
ignore_category = True
csvFileTranspose = commandCategories.jgi.csv

[generalization]
name = code
column = command
other_category = True
ignore_category = False
csvFile = codeCategories.jgi.csv

[generalization]
name = codeDetail
column = command
ignore_category = False
csvFile = codeCategories.jgi.csv

[dimension]
name = user
column = user
type=|S48

[dimension]
name = project
column = project
type=|S48

[dimension]
name = hostname
column = hostname
type = |S48

[dimension]
name = command
column = command
type=|S48

[dimension]
name = execCommand
column = execCommand
type=|S48

[summary]
identifier = duration
column = duration
bins = 0,1,3,5,15,30,60,120,300,600,1200,1800,3600,7200,14400,21600,28800,36000,43200,43500,64800,86700,2**63
units = s

[summary]
identifier = cpu
column = cpuTime_net
bins = 0,1,3,5,15,30,60,120,300,600,1200,1800,3600,7200,14400,21600,28800,36000,43200,43500,64800,86700,2**63
units = s

[summary]
identifier = ior
column = io_rchar_net
bins = 0,1024,1024**2,10*1024**2,100*1024**2,1*1024**3,2*1024**3,4*1024**3,8*1024**3,16*1024**3,32*1024**3,64*1024**3,128*1024**3,256*1024**3,512*1024**3,1*1024**4,2*1024**4,4*1024**4,8*1024**4,16*1024**4,2**63
units = bytes

[summary]
identifier = iow
column = io_wchar_net
bins = 0,1024,1024**2,10*1024**2,100*1024**2,1*1024**3,2*1024**3,4*1024**3,8*1024**3,16*1024**3,32*1024**3,64*1024**3,128*1024**3,256*1024**3,512*1024**3,1*1024**4,2*1024**4,4*1024**4,8*1024**4,16*1024**4,2**63
units = bytes

[summary]
identifier = threads
column = numThreads
bins = 1,2,3,4,5,6,7,8,9,10,12,16,20,24,32,48,64,128,256,512,1024,2**63
units = threads

[summary]
identifier = volatilityScore
column = volatilityScore
bins = 0,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95,1.0
units = AU

[summary]
identifier = residentMemory
column = rsspeak
bins = 1*1024**2,10*1024**2,100*1024**2,256*1024**2,512*1024**2,1*1024**3,2*1024**3,4*1024**3,8*1024**3,16*1024**3,32*1024**3,64*1024**3,128*1024**3,256*1024**3,512*1024**3,1*1024**4,2*1024**4,2**63
units = bytes

[summary]
identifier = addressSpace
column = vmpeak
bins = 1*1024**2,10*1024**2,100*1024**2,256*1024**2,512*1024**2,1*1024**3,2*1024**3,4*1024**3,8*1024**3,16*1024**3,32*1024**3,64*1024**3,128*1024**3,256*1024**3,512*1024**3,1*1024**4,2*1024**4,2**63
units = bytes
